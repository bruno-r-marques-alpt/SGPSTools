//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace PTIntranetSGPS.ptsgps_spsdev01 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    using System.Configuration;
    
	/// <remarks/>
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://localhost/wssms")]
	public class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol 
	{
        
		/// <remarks/>
		public Service1() 
		{
			this.Url = ConfigurationManager.AppSettings["SMSWebServiceUrl"];
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/wssms/sendEmail", RequestNamespace="http://localhost/wssms", ResponseNamespace="http://localhost/wssms", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public int sendEmail(string fromName, string from, string to, string subject, string body) 
		{
			object[] results = this.Invoke("sendEmail", new object[] {
																		 fromName,
																		 from,
																		 to,
																		 subject,
																		 body});
			return ((int)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginsendEmail(string fromName, string from, string to, string subject, string body, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("sendEmail", new object[] {
																  fromName,
																  from,
																  to,
																  subject,
																  body}, callback, asyncState);
		}
        
		/// <remarks/>
		public int EndsendEmail(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((int)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/wssms/sendSMS", RequestNamespace="http://localhost/wssms", ResponseNamespace="http://localhost/wssms", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string sendSMS(string conta, string largeAccount, string dominioFrom, string dominioTo, string to, string msg, string company, string user, string emailFrom) 
		{
			object[] results = this.Invoke("sendSMS", new object[] {
																	   conta,
																	   largeAccount,
																	   dominioFrom,
																	   dominioTo,
																	   to,
																	   msg,
																	   company,
																	   user,
																	   emailFrom});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginsendSMS(string conta, string largeAccount, string dominioFrom, string dominioTo, string to, string msg, string company, string user, string emailFrom, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("sendSMS", new object[] {
																conta,
																largeAccount,
																dominioFrom,
																dominioTo,
																to,
																msg,
																company,
																user,
																emailFrom}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndsendSMS(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/wssms/sendSMSV2", RequestNamespace="http://localhost/wssms", ResponseNamespace="http://localhost/wssms", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string sendSMSV2(string conta, string largeAccount, string dominioFrom, string dominioTo, string to, string from, string msg, string company, string user, string emailFrom) 
		{
			object[] results = this.Invoke("sendSMSV2", new object[] {
																		 conta,
																		 largeAccount,
																		 dominioFrom,
																		 dominioTo,
																		 to,
																		 from,
																		 msg,
																		 company,
																		 user,
																		 emailFrom});
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginsendSMSV2(string conta, string largeAccount, string dominioFrom, string dominioTo, string to, string from, string msg, string company, string user, string emailFrom, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("sendSMSV2", new object[] {
																  conta,
																  largeAccount,
																  dominioFrom,
																  dominioTo,
																  to,
																  from,
																  msg,
																  company,
																  user,
																  emailFrom}, callback, asyncState);
		}
        
		/// <remarks/>
		public string EndsendSMSV2(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/wssms/getLog", RequestNamespace="http://localhost/wssms", ResponseNamespace="http://localhost/wssms", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet getLog(string dominio, string initialDate, string finalDate) 
		{
			object[] results = this.Invoke("getLog", new object[] {
																	  dominio,
																	  initialDate,
																	  finalDate});
			return ((System.Data.DataSet)(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BegingetLog(string dominio, string initialDate, string finalDate, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("getLog", new object[] {
															   dominio,
															   initialDate,
															   finalDate}, callback, asyncState);
		}
        
		/// <remarks/>
		public System.Data.DataSet EndgetLog(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Data.DataSet)(results[0]));
		}
    }
}
